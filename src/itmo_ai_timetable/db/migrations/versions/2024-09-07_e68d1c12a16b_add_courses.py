"""add_courses

Revision ID: e68d1c12a16b
Revises: fadd8f8b5828
Create Date: 2024-09-07 21:47:10.605536

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e68d1c12a16b"
down_revision: str | None = "fadd8f8b5828"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None

table = sa.Table(
    "course",
    sa.MetaData(),
    sa.Column("id", sa.Integer, primary_key=True),
    sa.Column("name", sa.String),
    sa.Column("meeting_link", sa.String, nullable=True),
    sa.Column("course_info_link", sa.String, nullable=True),
    sa.Column("chat_link", sa.String, nullable=True),
    sa.Column("timetable_id", sa.String, nullable=True),
)


def upgrade() -> None:
    courses = [
        "C++ Hard",
        "C++ Lite",
        "MLOps",
        "Multimodal Language Models",
        "UNIX/Linux системы",
        "UPLIFT-моделирование",
        "А/В тестирование",
        "Автоматическое машинное обучение",
        "Алгоритмы и структуры данных",
        "Бизнес-аналитика",
        "Введение в LLM",
        "Введение в МО (Python) и Продвинутое МО (Python)",
        "Введение в МО на графах",
        "Воркшоп по разработке автономного агента на основе LLM",
        "Вычисления на графических процессорах (GPU)",
        "Глубокое обучение и компьютерное зрение",
        "Графические интерфейсы",
        "Графы знаний",
        "Динамическое ценообразование",
        "Дополнительные разделы машинного обучения",
        "Инжиниринг управления данными",
        "Иностранный язык",
        "Инструменты разработки data-driven решений",
        "История и философия науки",
        "Кейсы применения машинного обучения",
        (
            "Компьютерная химия и моделирование химических систем "
            "/ Computational Chemistry and Modeling of Chemical Systems"
        ),
        "Контейнеризация и оркестрация приложений",
        "Критическое мышление в практической деятельности",
        "Математика для машинного обучения и анализа данных",
        "Математическая статистика",
        "Машинное обучение для анализа научных данных",
        "Машинное обучение и анализ данных (практикум)",
        "Нейросети в химии / Neural Networks in Chemistry",
        "Обработка и генерация изображений",
        "Основы глубокого обучения",
        "Основы машинного обучения (ml-basic)",
        "Педагогическая практика",
        "Построение БД",
        "Практика применения машинного обучения",
        "Проведение научных исследований в области ИИ (Управление RnD командами)",
        "Программирование на Java (продвинутый)",
        "Программирование на естественном языке",
        "Программирование на языке Kotlin",
        "Продвинутое А/B - тестирование",
        "Продвинутое МО (Python) и Глубокое обучение",
        "Продвинутый курс научных исследований",
        "Продуктовые исследования",
        "Проектирование архитектуры микросервисов",
        "Проектирование систем машинного обучения (ML System Design)",
        "Проектная практика",
        "Производственная проектно-технологическая практика",
        "Производственная, научно-исследовательская практика",
        "Процессы и методологии разработки решений на основе ИИ",
        "Работа в удаленных командах",
        "Работа в удаленных командах (в 9)",
        "Работа в удаленных командах (в 17)",
        "Работа в удаленных командах (в 18)",
        "Разработка веб-приложений (Python Backend)",
        "Ранжирование и матчинг",
        "Рекомендательные системы",
        "Симулятор DS от Karpov.Courses",
        "Системы обработки и анализа больших массивов данных",
        "Создание технологического бизнеса",
        "Стартап-трек: от идеи до бизнеса",
        "Стратегия развития AI-продуктов",
        "Управление данными",
        "Хранение больших данных и Введение в МО (Python)",
        "Цифровая обработка сигналов (Digital Signal Processing)",
        "Этика искусственного интеллекта",
        "Хакатон",
        "Бизнес аналитика",
    ]
    op.bulk_insert(table, [{"name": course} for course in courses])


def downgrade() -> None:
    op.execute(table.delete())
